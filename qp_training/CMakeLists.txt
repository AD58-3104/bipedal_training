cmake_minimum_required(VERSION 3.10)
project(example)

function(enable_ninja_output_coloring target)
    if(UNIX AND CMAKE_GENERATOR STREQUAL "Ninja")
        if(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
            target_compile_options(${target} PRIVATE -fcolor-diagnostics)
            target_compile_options(${target} PRIVATE -fcolor-diagnostics)
        endif()
        if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
            target_compile_options(${target} PRIVATE -fdiagnostics-color)
            target_compile_options(${target} PRIVATE -fdiagnostics-color)
        endif()
    endif()
endfunction(enable_ninja_output_coloring)

set(EIGEN_NO_DEBUG ON)
find_package(Eigen3 REQUIRED)
# find_package(GiNaC REQUIRED)
find_package(OsqpEigen REQUIRED)

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/show.plt DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_executable(qp_train qp_train.cpp)
enable_ninja_output_coloring(qp_train)
add_executable(osqp_sample osqp_sample.cpp)
enable_ninja_output_coloring(osqp_sample)
target_include_directories(qp_train PUBLIC Eigen3::Eigen OsqpEigen::OsqpEigen)
target_link_libraries(qp_train Eigen3::Eigen OsqpEigen::OsqpEigen)
target_link_libraries(osqp_sample Eigen3::Eigen OsqpEigen::OsqpEigen)
install(TARGETS qp_train DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})